disks:
  - name: wormgpt-data
    mountPath: /data
    sizeGB: 1

services:
  # Frontend static site
  - type: static
    name: wormgpt-frontend
    buildCommand: npm install && npm run build
    staticPublishPath: ./dist
    envVars:
      - key: VITE_API_URL
        value: https://wormgpt-api.onrender.com

  # Backend API
  - type: web
    name: wormgpt-api
    env: python
    disk:
      name: wormgpt-data
      mountPath: /data
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      mkdir -p /data
      cp user_data.json /data/user_data.json || echo "No initial user_data.json"
      chmod 666 /data/user_data.json || true
    startCommand: cd api && gunicorn server:app --timeout 120 --keep-alive 65 --workers 2
    healthCheckPath: /health
    healthCheckTimeout: 60
    envVars:
      - key: USER_DATA_FILE
        value: /data/user_data.json

  # Existing Key Generator Service
  - type: web
    name: wormgpt-keygen
    env: python
    disk:
      name: wormgpt-data
      mountPath: /data
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r keygen_requirements.txt
      mkdir -p /data
    startCommand: python KEYGEN.PY
    envVars:
      - key: USER_DATA_FILE
        value: /data/user_data.json

  # Web Bot Service
  - type: web
    name: wormgpt-webbot
    env: python
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: gunicorn WEBBOT:app --bind 0.0.0.0:$PORT --worker-class sync --workers 1 --threads 8 --timeout 0
    autoDeploy: true
    envVars:
      - key: BOT_TOKEN
        value: "7909216903:AAGJXAo1nWT0Wqs6ohOdNaWwtejUEKcHtZs"
      - key: WEBAPP_URL
        value: "https://wormgpt-frontend.onrender.com"
      - key: PORT
        value: "10000"
    healthCheckPath: /health
    healthCheckTimeout: 60

  # Telegram Bot Service
  - type: web
    name: wormgpt-telegram
    env: python
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: gunicorn -w 1 -t 0 'WEBBOT:app'
    envVars:
      - key: BOT_TOKEN
        value: "7909216903:AAGJXAo1nWT0Wqs6ohOdNaWwtejUEKcHtZs"
      - key: WEBAPP_URL
        value: "https://wormgpt-frontend.onrender.com"
      - key: PORT
        value: "10000"
    healthCheckPath: /health
    healthCheckTimeout: 60
